import React, { useState, useEffect } from ‘react’;
import { Search, MapPin, Calendar, Video, Users, Clock, Globe } from ‘lucide-react’;

const CityCouncilApp = () => {
const [searchTerm, setSearchTerm] = useState(’’);
const [selectedState, setSelectedState] = useState(’’);
const [meetingType, setMeetingType] = useState(‘all’);
const [meetings, setMeetings] = useState([]);
const [loading, setLoading] = useState(false);

// Sample data structure for demonstration
const sampleMeetings = [
{
id: 1,
city: ‘San Francisco’,
state: ‘CA’,
meetingTitle: ‘Regular City Council Meeting’,
date: ‘2025-09-22’,
time: ‘19:00’,
status: ‘scheduled’,
liveStreamUrl: ‘https://example.com/sf-live’,
recordingUrl: null,
agenda: ‘Budget discussion, zoning permits, public comments’,
population: 873965,
timezone: ‘PST’
},
{
id: 2,
city: ‘Austin’,
state: ‘TX’,
meetingTitle: ‘Planning Commission Meeting’,
date: ‘2025-09-21’,
time: ‘18:30’,
status: ‘live’,
liveStreamUrl: ‘https://example.com/austin-live’,
recordingUrl: null,
agenda: ‘Development proposals, transportation planning’,
population: 964254,
timezone: ‘CST’
},
{
id: 3,
city: ‘Portland’,
state: ‘OR’,
meetingTitle: ‘City Council Session’,
date: ‘2025-09-20’,
time: ‘14:00’,
status: ‘completed’,
liveStreamUrl: null,
recordingUrl: ‘https://example.com/portland-recording’,
agenda: ‘Housing policies, environmental initiatives’,
population: 652503,
timezone: ‘PST’
},
{
id: 4,
city: ‘Nashville’,
state: ‘TN’,
meetingTitle: ‘Metro Council Meeting’,
date: ‘2025-09-23’,
time: ‘18:00’,
status: ‘scheduled’,
liveStreamUrl: ‘https://example.com/nashville-live’,
recordingUrl: null,
agenda: ‘Music industry ordinances, infrastructure updates’,
population: 689447,
timezone: ‘CST’
}
];

const states = [
‘AL’, ‘AK’, ‘AZ’, ‘AR’, ‘CA’, ‘CO’, ‘CT’, ‘DE’, ‘FL’, ‘GA’,
‘HI’, ‘ID’, ‘IL’, ‘IN’, ‘IA’, ‘KS’, ‘KY’, ‘LA’, ‘ME’, ‘MD’,
‘MA’, ‘MI’, ‘MN’, ‘MS’, ‘MO’, ‘MT’, ‘NE’, ‘NV’, ‘NH’, ‘NJ’,
‘NM’, ‘NY’, ‘NC’, ‘ND’, ‘OH’, ‘OK’, ‘OR’, ‘PA’, ‘RI’, ‘SC’,
‘SD’, ‘TN’, ‘TX’, ‘UT’, ‘VT’, ‘VA’, ‘WA’, ‘WV’, ‘WI’, ‘WY’
];

useEffect(() => {
// Simulate loading data
setLoading(true);
setTimeout(() => {
setMeetings(sampleMeetings);
setLoading(false);
}, 1000);
}, []);

const filteredMeetings = meetings.filter(meeting => {
const matchesSearch = meeting.city.toLowerCase().includes(searchTerm.toLowerCase()) ||
meeting.state.toLowerCase().includes(searchTerm.toLowerCase()) ||
meeting.meetingTitle.toLowerCase().includes(searchTerm.toLowerCase());
const matchesState = selectedState === ‘’ || meeting.state === selectedState;
const matchesType = meetingType === ‘all’ || meeting.status === meetingType;
return matchesSearch && matchesState && matchesType;
});

const getStatusColor = (status) => {
switch(status) {
case ‘live’: return ‘bg-red-100 text-red-800’;
case ‘scheduled’: return ‘bg-blue-100 text-blue-800’;
case ‘completed’: return ‘bg-gray-100 text-gray-800’;
default: return ‘bg-gray-100 text-gray-800’;
}
};

const getStatusIcon = (status) => {
switch(status) {
case ‘live’: return <Video className="w-4 h-4 text-red-600" />;
case ‘scheduled’: return <Calendar className="w-4 h-4 text-blue-600" />;
case ‘completed’: return <Clock className="w-4 h-4 text-gray-600" />;
default: return <Calendar className="w-4 h-4 text-gray-600" />;
}
};

return (
<div className="min-h-screen bg-gray-50">
{/* Header */}
<div className="bg-white shadow-sm border-b">
<div className="max-w-7xl mx-auto px-4 py-6">
<div className="flex items-center justify-between">
<div>
<h1 className="text-3xl font-bold text-gray-900 flex items-center gap-2">
<Users className="w-8 h-8 text-blue-600" />
CityWatch
</h1>
<p className="text-gray-600 mt-1">Live city council meetings across America</p>
</div>
<div className="text-sm text-gray-500">
Tracking {meetings.length.toLocaleString()} meetings nationwide
</div>
</div>
</div>
</div>

```
  {/* Search and Filters */}
  <div className="max-w-7xl mx-auto px-4 py-6">
    <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        {/* Search */}
        <div className="md:col-span-2">
          <div className="relative">
            <Search className="absolute left-3 top-3 h-4 w-4 text-gray-400" />
            <input
              type="text"
              placeholder="Search by city, state, or meeting type..."
              className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>
        </div>

        {/* State Filter */}
        <div>
          <select
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            value={selectedState}
            onChange={(e) => setSelectedState(e.target.value)}
          >
            <option value="">All States</option>
            {states.map(state => (
              <option key={state} value={state}>{state}</option>
            ))}
          </select>
        </div>

        {/* Meeting Type Filter */}
        <div>
          <select
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            value={meetingType}
            onChange={(e) => setMeetingType(e.target.value)}
          >
            <option value="all">All Meetings</option>
            <option value="live">Live Now</option>
            <option value="scheduled">Upcoming</option>
            <option value="completed">Past Meetings</option>
          </select>
        </div>
      </div>
    </div>

    {/* Stats */}
    <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
      <div className="bg-white rounded-lg shadow-sm p-4">
        <div className="flex items-center justify-between">
          <div>
            <p className="text-sm font-medium text-gray-600">Live Now</p>
            <p className="text-2xl font-bold text-red-600">
              {meetings.filter(m => m.status === 'live').length}
            </p>
          </div>
          <Video className="w-8 h-8 text-red-600" />
        </div>
      </div>
      <div className="bg-white rounded-lg shadow-sm p-4">
        <div className="flex items-center justify-between">
          <div>
            <p className="text-sm font-medium text-gray-600">Today</p>
            <p className="text-2xl font-bold text-blue-600">
              {meetings.filter(m => m.date === '2025-09-21').length}
            </p>
          </div>
          <Calendar className="w-8 h-8 text-blue-600" />
        </div>
      </div>
      <div className="bg-white rounded-lg shadow-sm p-4">
        <div className="flex items-center justify-between">
          <div>
            <p className="text-sm font-medium text-gray-600">This Week</p>
            <p className="text-2xl font-bold text-green-600">{meetings.length}</p>
          </div>
          <Clock className="w-8 h-8 text-green-600" />
        </div>
      </div>
      <div className="bg-white rounded-lg shadow-sm p-4">
        <div className="flex items-center justify-between">
          <div>
            <p className="text-sm font-medium text-gray-600">Cities</p>
            <p className="text-2xl font-bold text-purple-600">
              {new Set(meetings.map(m => m.city)).size}
            </p>
          </div>
          <MapPin className="w-8 h-8 text-purple-600" />
        </div>
      </div>
    </div>

    {/* Meeting List */}
    <div className="space-y-4">
      {loading ? (
        <div className="bg-white rounded-lg shadow-sm p-8 text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">Loading meetings...</p>
        </div>
      ) : filteredMeetings.length === 0 ? (
        <div className="bg-white rounded-lg shadow-sm p-8 text-center">
          <p className="text-gray-600">No meetings found matching your criteria.</p>
        </div>
      ) : (
        filteredMeetings.map(meeting => (
          <div key={meeting.id} className="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow">
            <div className="flex items-start justify-between">
              <div className="flex-1">
                <div className="flex items-center gap-3 mb-2">
                  <h3 className="text-xl font-semibold text-gray-900">{meeting.city}, {meeting.state}</h3>
                  <span className={`px-2 py-1 rounded-full text-xs font-medium flex items-center gap-1 ${getStatusColor(meeting.status)}`}>
                    {getStatusIcon(meeting.status)}
                    {meeting.status.charAt(0).toUpperCase() + meeting.status.slice(1)}
                  </span>
                </div>
                <h4 className="text-lg font-medium text-gray-800 mb-2">{meeting.meetingTitle}</h4>
                <p className="text-gray-600 mb-3">{meeting.agenda}</p>
                <div className="flex items-center gap-4 text-sm text-gray-500 mb-4">
                  <div className="flex items-center gap-1">
                    <Calendar className="w-4 h-4" />
                    {meeting.date}
                  </div>
                  <div className="flex items-center gap-1">
                    <Clock className="w-4 h-4" />
                    {meeting.time} {meeting.timezone}
                  </div>
                  <div className="flex items-center gap-1">
                    <MapPin className="w-4 h-4" />
                    Pop: {meeting.population.toLocaleString()}
                  </div>
                </div>
              </div>
              <div className="ml-6 flex flex-col gap-2">
                {meeting.liveStreamUrl && (
                  <button className="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors flex items-center gap-2">
                    <Video className="w-4 h-4" />
                    Watch Live
                  </button>
                )}
                {meeting.recordingUrl && (
                  <button className="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors flex items-center gap-2">
                    <Video className="w-4 h-4" />
                    View Recording
                  </button>
                )}
                <button className="border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50 transition-colors flex items-center gap-2">
                  <Globe className="w-4 h-4" />
                  City Website
                </button>
              </div>
            </div>
          </div>
        ))
      )}
    </div>
  </div>
</div>
```

);
};

export default CityCouncilApp;
